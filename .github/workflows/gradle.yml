# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "feature/internal-changes" ]

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            classifier: win
          - os: ubuntu-latest
            classifier: linux
          - os: macos-latest
            classifier: mac

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build Regular Installer
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: jpackage -PisCI=true

      - name: Checking jars for Macx64
        if: ${{ runner.os == 'MacOS' }}
        run: ls backup-code-generator/build/jlinkbase/jlinkjars

      - name: Build for Macaarch64
        if: ${{ runner.os == 'MacOS' }}
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: createM1Jar -PisCI=true

      - name: Checking jars used for Macaarch64
        if: ${{ runner.os == 'MacOS' }}
        run: ls backup-code-generator/build/jlinkbase/jlinkjars
